# =====================
# AMCL
# =====================
amcl:
  ros__parameters:
    use_sim_time: False
    odom_frame_id: "odom"
    base_frame_id: "base_link"
    scan_topic: "/scan_1st"
    min_particles: 100
    max_particles: 5000
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    robot_model_type: "nav2_amcl::OmniMotionModel"  # o "DifferentialMotionModel" si es un base diff
    laser_model_type: "likelihood_field"
    laser_max_range: 100.0
    laser_min_range: -1.0
    update_min_d: 0.05
    update_min_a: 0.05
    resample_interval: 1
    transform_tolerance: 0.1
    recovery_alpha_slow: 0.001
    recovery_alpha_fast: 0.1
    initial_pose_x: 0.0
    initial_pose_y: 0.0
    initial_pose_a: 0.0
    initial_cov_xx: 0.25
    initial_cov_yy: 0.25
    initial_cov_aa: 0.06853

# =====================
# BT NAVIGATOR
# =====================
bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

# =====================
# DWB CONTROLLER SERVER
# =====================
controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.5
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.5
    failure_tolerance: 0.3

    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]  # o "precise_goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    # Goal checker parameters
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25

    # Si lo necesitas, define la "precise_goal_checker" también
    # precise_goal_checker:
    #   plugin: "nav2_controller::SimpleGoalChecker"
    #   xy_goal_tolerance: 0.25
    #   yaw_goal_tolerance: 0.25
    #   stateful: True

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      # Velocidades mínimas/máximas
      min_vel_x: 0.0
      max_vel_x: 0.5
      # Si es base omnidireccional y quieres movimiento en Y, pon max_vel_y > 0
      min_vel_y: 0.0
      max_vel_y: 0.0   # Cambia si quieres moverte en Y
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 0.26
      min_speed_theta: 0.0

      # Aceleraciones
      acc_lim_x: 4.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -4.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2

      # Muestreo
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20

      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.5
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True

      # Critic plugins
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

# =====================
# PLANNER SERVER (NavFN)
# =====================
planner_server:
  ros__parameters:
    use_sim_time: False
    expected_planner_frequency: 20.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

# =====================
# MAP SERVER
# =====================
map_server:
  ros__parameters:
    use_sim_time: False
    yaml_filename: "/home/mapir/ros2_nav/src/ranger_nav2/config/map.yaml"

# =====================
# GLOBAL COSTMAP
# =====================
global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: False        # Robot real
      global_frame: "map"        # Typically 'map'
      robot_base_frame: "base_link"
      resolution: 0.05
      footprint_padding: 0.03
      transform_tolerance: 0.2

      # Frecuencias típicas
      update_frequency: 1.0
      publish_frequency: 1.0

      # Radio del robot (o footprint)
      robot_radius: 0.22

      # Lista de capas
      plugins:
        - "static_layer"
        - "obstacle_layer"
        - "inflation_layer"
        - "proxemics_layer"

      # Static layer
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        enabled: true
        map_subscribe_transient_local: true
        subscribe_to_updates: false
        transform_tolerance: 0.2

      # Obstacle layer
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        footprint_clearing_enabled: true
        max_obstacle_height: 2.0
        combination_method: 1
        observation_sources: "laser_front laser_back"

        laser_front:
          topic: "/scan_1st"
          max_obstacle_height: 2.0
          clearing: True
          marking: True

        laser_back:
          topic: "/scan_2nd"
          max_obstacle_height: 2.0
          clearing: True
          marking: True

      # Inflation layer
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.55
        cost_scaling_factor: 1.0
        inflate_unknown: false
        inflate_around_unknown: true  # Pon en false si no quieres inflar celdas desconocidas

      # Proxemics layer
      proxemics_layer:
        plugin: "proxemics_costmap_layer::ProxemicsLayer"
        ellipse_a: 0.5
        ellipse_b: 0.3

      # Costmap completo
      always_send_full_costmap: True

# =====================
# LOCAL COSTMAP
# =====================
local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: False          # Robot real
      global_frame: "odom"         # Típico para local costmap
      robot_base_frame: "base_link"
      resolution: 0.05
      transform_tolerance: 0.2

      rolling_window: true
      width: 3
      height: 3

      # Frecuencias del local costmap
      update_frequency: 5.0
      publish_frequency: 2.0

      robot_radius: 0.22
      footprint_padding: 0.03

      plugins:
        - "obstacle_layer"
        - "inflation_layer"
        - "proxemics_layer"

      # Obstacle layer local
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        footprint_clearing_enabled: true
        max_obstacle_height: 2.0
        combination_method: 1
        observation_sources: "laser_front laser_back"

        laser_front:
          topic: "/scan_1st"
          max_obstacle_height: 2.0
          clearing: True
          marking: True

        laser_back:
          topic: "/scan_2nd"
          max_obstacle_height: 2.0
          clearing: True
          marking: True

      # Inflation layer local
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.55
        cost_scaling_factor: 1.0
        inflate_unknown: false
        inflate_around_unknown: true

      # Proxemics layer local
      proxemics_layer:
        plugin: "proxemics_costmap_layer::ProxemicsLayer"
        ellipse_a: 0.5
        ellipse_b: 0.3

# =====================
# BEHAVIOR SERVER
# =====================
behavior_server:
  ros__parameters:
    use_sim_time: False
    costmap_topic: "local_costmap/costmap_raw"
    footprint_topic: "local_costmap/published_footprint"
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    wait:
      plugin: "nav2_behaviors/Wait"
    global_frame: "odom"
    robot_base_frame: "base_link"
    transform_timeout: 0.1
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2
